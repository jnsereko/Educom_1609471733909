/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN ClassActionsGenerated.js PLEASE EDIT ../ClassActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import ClassApi from "../../../api/ClassApi";

let actionsFunction = {
  
  // Reset reducer
  reset: function() {
    return { type: types.RESET_CLASS };
  },

  //CRUD METHODS

  // Create class
  createClass: function(class) {
    return function(dispatch) {
      return ClassApi
        .createClass(class)
        .then(class => {
          dispatch(actionsFunction.createClassSuccess(class));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createClassSuccess: function(class) {
    return { type: types.CREATE_CLASS_SUCCESS, payload: class };
  },


  // Delete class
  deleteClass: function(id) {
    return function(dispatch) {
      return ClassApi
        .deleteClass(id)
        .then(class => {
          dispatch(actionsFunction.deleteClassSuccess(class));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteClassSuccess: function(class) {
    return { type: types.DELETE_CLASS_SUCCESS, payload: class };
  },


  // Find by classSubject
  findByclassSubject: function(key) {
    return function(dispatch) {
      return ClassApi
        .findByclassSubject(key)
        .then(item => {
          dispatch(actionsFunction.findByclassSubjectSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findByclassSubjectSuccess: function(item) {
    return { type: types.FINDBYCLASSSUBJECT_CLASS_SUCCESS, payload: item };
  },


  // Get class
  loadClass: function(id) {
    return function(dispatch) {
      return ClassApi
        .getOneClass(id)
        .then(class => {
          dispatch(actionsFunction.loadClassSuccess(class));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadClassSuccess: function(class) {
    return { type: types.GET_CLASS_SUCCESS, payload: class };
  },

  // Load  list
  loadClassList: function() {
    return function(dispatch) {
      return ClassApi
        .getClassList()
        .then(list => {
          dispatch(actionsFunction.loadClassListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadClassListSuccess: function(list) {
    return { type: types.LIST_CLASS_SUCCESS, payload: list };
  },

	
  // Save class
  saveClass: function(class) {
    return function(dispatch) {
      return ClassApi
        .saveClass(class)
        .then(class => {
          dispatch(actionsFunction.saveClassSuccess(class));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveClassSuccess: function(class) {
    return { type: types.UPDATE_CLASS_SUCCESS, payload: class };
  },


};

export default actionsFunction;
